name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

env:
  NX_CI_ACCESS_TOKEN: ${{ secrets.NX_CI_ACCESS_TOKEN }}

permissions:
  actions: read
  contents: read

jobs:
  setup:
    name: 'Setup and Dependency Caching'
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node Modules
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: Setup NX Cloud for Distributed Task Execution
        run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

  format:
    name: 'Code Formatting Check'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Format Check
        run: npm run format
        env:
          NX_CI_ACCESS_TOKEN: ${{ secrets.NX_CI_ACCESS_TOKEN }}

  eslint:
    name: 'ESLint Check'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run ESLint Check
        run: npm run eslint
        env:
          NX_CI_ACCESS_TOKEN: ${{ secrets.NX_CI_ACCESS_TOKEN }}

  stylelint:
    name: 'Stylelint Check'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Stylelint Check
        run: npm run stylelint
        env:
          NX_CI_ACCESS_TOKEN: ${{ secrets.NX_CI_ACCESS_TOKEN }}

  test:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Tests
        run: npm run test
        env:
          NX_CI_ACCESS_TOKEN: ${{ secrets.NX_CI_ACCESS_TOKEN }}
