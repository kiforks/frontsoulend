name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

env:
  NX_CI_ACCESS_TOKEN: ${{ secrets.NX_CI_ACCESS_TOKEN }}

permissions:
  actions: read
  contents: read

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Shared setup job
  setup:
    name: Setup Environment
    runs-on: ${{ vars.PIPELINE_TESTS_TAG || 'ubuntu-latest' }}
    outputs:
      nx_cache: ${{ steps.nx-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Nx Cache Check
        id: nx-cache
        run: echo "cache-hit=$(test -d node_modules && echo true || echo false)" >> $GITHUB_ENV

  # Changes filter job
  changes:
    runs-on: ${{ vars.PIPELINE_TESTS_TAG || 'ubuntu-latest' }}
    needs: [setup]
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      e2e: ${{ steps.filter.outputs.e2e }}
      general: ${{ steps.general.outputs.changed }}
    steps:
      - name: Check for file changes ðŸš—
        if: github.event_name == 'pull_request'
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            all_ci: &all_ci
              - '.github/workflows/ci.yml'
            frontend: &frontend
              - *all_ci
              - 'apps/frontend/**/package.json'
              - 'apps/frontend/**/package-lock.lock'
              - 'apps/frontend/**/*.js'
              - 'apps/frontend/**/*.ts'
              - 'apps/frontend/**/*.html'
              - 'apps/frontend/**/*.css'
              - 'apps/frontend/**/*.scss'
              - 'apps/frontend/**/*.json'
            e2e: &e2e
              - *all_ci
              - 'apps/qa/**/package.json'
              - 'apps/qa/**/package-lock.lock'
              - 'apps/qa/**/*.ts'
              - 'apps/qa/**/*.json'
            changed:
              - *all_ci
              - *frontend
              - *e2e

  stylelint:
    name: Stylelint
    runs-on: ${{ vars.PIPELINE_TESTS_TAG || 'ubuntu-latest' }}
    needs: [setup, changes]
    if: needs.changes.outputs.frontend == 'true'
    steps:
      - name: Run stylelint
        run: npx nx affected -t stylelint

  lint:
    name: Lint
    runs-on: ${{ vars.PIPELINE_TESTS_TAG || 'ubuntu-latest' }}
    needs: [setup, changes]
    if: needs.changes.outputs.frontend == 'true'
    steps:
      - name: Run lint
        run: npx nx affected -t lint
